// ************************************************************************** //
// *
// *    Breakpoints & Containers (variables definitions)
// *
// *    - Defaults breakpoints
// *    - Defaults containers
// *    - Additional Breakpoints & Containers
// *    - Useless Breakpoints & Containers
// *
// ************************************************************************** //

@use 'sass:meta';
@use './../generated';
@use './../abstracts/functions/collection';



// * =============================================
// *
// *    Defaults breakpoints
// *
// * =============================================

/// Breakpoints names
/// ==============================================

$breakpoint-name-phone: if(meta.global-variable-exists('breakpoint-name-phone', $module: generated), generated.$breakpoint-name-phone, 'phone') !default;
$breakpoint-name-tablet: if(meta.global-variable-exists('breakpoint-name-tablet', $module: generated), generated.$breakpoint-name-tablet, 'tablet') !default;
$breakpoint-name-laptop: if(meta.global-variable-exists('breakpoint-name-laptop', $module: generated), generated.$breakpoint-name-laptop, 'laptop') !default;
$breakpoint-name-desktop: if(meta.global-variable-exists('breakpoint-name-desktop', $module: generated), generated.$breakpoint-name-desktop, 'desktop') !default;
$breakpoint-name-wide: if(meta.global-variable-exists('breakpoint-name-wide', $module: generated), generated.$breakpoint-name-wide, 'wide') !default;
$breakpoint-name-ultra: if(meta.global-variable-exists('breakpoint-name-ultra', $module: generated), generated.$breakpoint-name-ultra, 'ultra') !default;


/// Defaults breakpoints values
/// ==============================================

$breakpoint-phone: if(meta.global-variable-exists('breakpoint-phone', $module: generated), generated.$breakpoint-phone, 576px) !default;
$breakpoint-tablet: if(meta.global-variable-exists('breakpoint-tablet', $module: generated), generated.$breakpoint-tablet, 768px) !default;
$breakpoint-laptop: if(meta.global-variable-exists('breakpoint-laptop', $module: generated), generated.$breakpoint-laptop, 992px) !default;
$breakpoint-desktop: if(meta.global-variable-exists('breakpoint-desktop', $module: generated), generated.$breakpoint-desktop, 1200px) !default;
$breakpoint-wide: if(meta.global-variable-exists('breakpoint-wide', $module: generated), generated.$breakpoint-wide, 1400px) !default;
$breakpoint-ultra: if(meta.global-variable-exists('breakpoint-ultra', $module: generated), generated.$breakpoint-ultra, 1600px) !default;


/// Breakpoints collection
/// ==============================================

$breakpoints: (
    $breakpoint-name-phone  : $breakpoint-phone,
    $breakpoint-name-tablet : $breakpoint-tablet,
    $breakpoint-name-laptop : $breakpoint-laptop,
    $breakpoint-name-desktop: $breakpoint-desktop,
    $breakpoint-name-wide   : $breakpoint-wide,
    $breakpoint-name-ultra  : $breakpoint-ultra,
);



// * =============================================
// *
// *    Defaults containers
// *
// * =============================================

/// Defaults containers values
/// ==============================================

$container-phone: if(meta.global-variable-exists('container-phone', $module: generated), generated.$container-phone, 540px) !default;
$container-tablet: if(meta.global-variable-exists('container-tablet', $module: generated), generated.$container-tablet, 720px) !default;
$container-laptop: if(meta.global-variable-exists('container-laptop', $module: generated), generated.$container-laptop, 960px) !default;
$container-desktop: if(meta.global-variable-exists('container-desktop', $module: generated), generated.$container-desktop, 1140px) !default;
$container-wide: if(meta.global-variable-exists('container-wide', $module: generated), generated.$container-wide, 1340px) !default;
$container-ultra: if(meta.global-variable-exists('container-ultra', $module: generated), generated.$container-ultra, 1520px) !default;


/// Containers collection
/// ==============================================

$containers: (
    $breakpoint-name-phone  : $container-phone,
    $breakpoint-name-tablet : $container-tablet,
    $breakpoint-name-laptop : $container-laptop,
    $breakpoint-name-desktop: $container-desktop,
    $breakpoint-name-wide   : $container-wide,
    $breakpoint-name-ultra  : $container-ultra,
);



// * =============================================
// *
// *    Additional Breakpoints & Containers
// *
// * =============================================

/// Add customs Breakpoints and Containers
/// ==============================================
/// $additional-breakpoints: ('ultra-wide': (breakpoint: 1800px, container: 1740px));

$additional-breakpoints: if(meta.global-variable-exists('additional-breakpoints', $module: generated), generated.$additional-breakpoints, ()) !default;

@if collection.notEmpty($additional-breakpoints) {
    @each $key, $value in $additional-breakpoints {

        $additional-breakpoint-value: map-get($value, 'breakpoint');
        $additional-container-value: map-get($value, 'container');

        @if $additional-breakpoint-value {
            $breakpoints: map-merge($breakpoints, ($key: $additional-breakpoint-value));
        }
        @if $additional-container-value {
            $containers: map-merge($containers, ($key: $additional-container-value));
        }
    }
}



// * =============================================
// *
// *    Useless Breakpoints & Containers
// *
// * =============================================

/// Remove the not needed breakpoints and containers
/// ==============================================
/// $useless-breakpoints: ('tablet', 'ultra-wide');

$useless-breakpoints: if(meta.global-variable-exists('useless-breakpoints', $module: generated), generated.$useless-breakpoints, ()) !default;

@if collection.notEmpty($useless-breakpoints) {
    @each $key, $value in $breakpoints {
        @if collection.keyExists($useless-breakpoints, $key) {
            $breakpoints: collection.unset($breakpoints, $key);
            $containers: collection.unset($containers, $key);
        }
    }
}
