// * -------------- @osw3/symfony-ux/assets/sass/builder/link.scss -------------
// *
// *    Builder for Link component
// *
// * ---------------------------------------------------------------------------

@use './icon';
@use './../builders/banner';
@use './../storages/prefix';
@use './../mixins/spacing';
@use './../mixins/transition';
// @use './../mixins/icon';

@use './../storages/link' as store;
@use './../components/link' ;
@include banner.header('Component Link');

$prefix: prefix.$prefix;


// $font-size: 4rem;

// * Component Structure
// * ---------------------------------------------

.#{$prefix}link {
    display: inline-flex;
    align-items: center; 
    width: fit-content;
    line-height: inherit;
    font-size: inherit;

    cursor: store.$cursor;
    color: var(--#{$prefix}link--color);
    background-color: var(--#{$prefix}link--bg-color);
    text-decoration: store.$text-decoration;
    text-decoration-color: var(--#{$prefix}link-text-decoration--color);

    @if store.$text-decoration == underline {
        text-decoration-thickness: 2px;
    }
    @else {
        text-decoration-thickness: 0px;
    }

    @include transition.set(
        (color, background-color, text-decoration, text-decoration-color, text-decoration-thickness),
        store.$transition-delay,
        store.$transition-type,
    );

    &:hover {
        color: var(--#{$prefix}link--color--hover);
        background-color: var(--#{$prefix}link--bg-color--hover);
        text-decoration: store.$text-decoration-hover;
        text-decoration-color: var(--#{$prefix}link-text-decoration--color--hover);

        @if store.$text-decoration == underline {
            text-decoration-thickness: 2px;
        }
        @else {
            text-decoration-thickness: 0px;
        }
    }

    &:active, 
    &.active,
    &:active:hover, 
    &.active:hover {
        color: var(--#{$prefix}link--color--active);
        background-color: var(--#{$prefix}link--bg-color--active);
        text-decoration: store.$text-decoration-active;
        text-decoration-color: var(--#{$prefix}link-text-decoration--color--active);

        @if store.$text-decoration == underline {
            text-decoration-thickness: 2px;
        }
        @else {
            text-decoration-thickness: 0px;
        }
    }

    &[disabled],
    &[disabled]:active, 
    &[disabled].active, 
    &[disabled]:hover, 
    &[disabled]:active:hover, 
    &[disabled].active:hover {
        color: var(--#{$prefix}link--disabled--color) !important;
        cursor: default !important;
        text-decoration: none !important;
    }


    & .#{$prefix}icon {
        height: 1em;
        display: inline-flex;
        vertical-align: baseline;
        // fill: transparent;
        @include transition.set(
            (fill, stroke),
            store.$transition-delay,
            store.$transition-type,
        );

        &:has(img), &:has(svg) {
            width: 1em;
        }
    }

    &:has(.#{$prefix}icon:first-child) .#{$prefix}icon {
        margin-right: 3px;
    }
    &:has(.#{$prefix}icon:last-child) .#{$prefix}icon {
        margin-left: 3px;
    }
}