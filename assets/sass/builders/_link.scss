// * -------------- @osw3/symfony-ux/assets/sass/builder/link.scss -------------
// *
// *    Builder for Link component
// *
// * ---------------------------------------------------------------------------

@use './../builders/banner';
@use './../storages/prefix';
@use './../mixins/spacing';
@use './../mixins/transition';
// @use './../mixins/icon';

@use './../storages/icons';
@use './../storages/link' as store;
@use './../components/link' ;
@include banner.header('Component Link');


// * Component Structure
// * ---------------------------------------------

.#{prefix.$prefix}link {

    display: inline-flex;

    cursor: store.$cursor;
    color: var(--#{prefix.$prefix}link-color);
    background-color: var(--#{prefix.$prefix}link-bg-color);
    text-decoration: store.$text-decoration;
    text-decoration-color: var(--#{prefix.$prefix}link-text-decoration-color);
    
    @if store.$text-decoration == underline {
        text-decoration-thickness: 2px;
    }
    @else {
        text-decoration-thickness: 0px;
    }

    @include transition.set(
        (color, background-color, text-decoration, text-decoration-color, text-decoration-thickness),
        store.$transition-delay,
        store.$transition-type,
    );

    &:hover {
        color: var(--#{prefix.$prefix}link-hover-color) !important;
        background-color: var(--#{prefix.$prefix}link-hover-bg-color);
        text-decoration: store.$text-decoration-hover !important;
        text-decoration-color: var(--#{prefix.$prefix}link-text-decoration-hover-color) !important;

        @if store.$text-decoration == underline {
            text-decoration-thickness: 2px;
        }
        @else {
            text-decoration-thickness: 0px;
        }
    }

    &:active, 
    &.active,
    &:active:hover, 
    &.active:hover {
        color: var(--#{prefix.$prefix}link-active-color) !important;
        background-color: var(--#{prefix.$prefix}link-active-bg-color);
        text-decoration: store.$text-decoration-active !important;
        text-decoration-color: var(--#{prefix.$prefix}link-text-decoration-active-color) !important;

        @if store.$text-decoration == underline {
            text-decoration-thickness: 2px;
        }
        @else {
            text-decoration-thickness: 0px;
        }
    }

    &[disabled],
    &[disabled]:active, 
    &[disabled].active, 
    &[disabled]:hover, 
    &[disabled]:active:hover, 
    &[disabled].active:hover {
        color: var(--#{prefix.$prefix}link-disabled-color) !important;
        cursor: default !important;
        text-decoration: none !important;
    }


    &[target]:not([target=_self],[target=_parent]) {
        &::after {
            content: "";
            display: inline-block;
            margin-left: 2px;
            margin-top: 4px;
            width: .6em;
            height: .6em;
            mask: var(--ux-icon-external-link) no-repeat;
            background-color: currentColor;
            -webkit-mask: var(--ux-icon-external-link) no-repeat;
            -webkit-mask-size: contain;
        }
    }
}