// * ----------- @osw3/symfony-ux/assets/sass/builder/form.scss -----------
// *
// *    Builder for Form component
// *
// * ---------------------------------------------------------------------------

@use './../builders/banner';
@use './../storages/prefix';
@use './../mixins/icon' as iconMixin;
@use './../mixins/flex';
@use './../mixins/spacing';
@use './../mixins/transition';
@use './../functions/utils';

@use './../storages/form-widget' as store;
@use './../components/form' ;
@include banner.header('Component Form Widget');
$prefix: prefix.$prefix;



// * Component Structure
// * ---------------------------------------------

.#{$prefix}form-widget {

    // Widget layout
    // --

    @include flex.display;
    flex-direction: column;
    flex-wrap     : wrap;
    @if store.$widget--padding-x == store.$widget--padding-y {
        @include spacing.inner(store.$widget--padding-x);
    } @else {
        @include spacing.inner-x(store.$widget--padding-x);
        @include spacing.inner-y(store.$widget--padding-y);
    }
    color           : var(--#{$prefix}form-widget--color);
    background-color: var(--#{$prefix}form-widget--bg-color);
    @if store.$widget--border-width > 0 {
        border      : store.$widget--border-width solid var(--#{$prefix}form-widget--border-color);
    }
    border-radius   : store.$widget--border-radius;

    @if store.$transition {
        @include transition.set(
            (color, background-color, border-color),
            store.$transition-delay,
            store.$transition-type,
        );
    }

    // Widget label
    &-label {
        // border: 5px solid blue;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        // position: relative;

        color: var(--#{$prefix}form-widget-label--color);
        background-color: var(--#{$prefix}form-widget-label--bg-color);

        @if store.$label--padding-x == store.$label--padding-y {
            @if store.$label--padding-x > 0 {
                @include spacing.inner(store.$label--padding-x);
            }
        } @else {
            @include spacing.inner-x(store.$label--padding-x);
            @include spacing.inner-y(store.$label--padding-y);
        }
        border-radius   : store.$label--border-radius;
    }

    // Required symbol
    &-required &-label::after {
        content: store.$required--symbol;
        color: var(--#{$prefix}form-widget--required--color) !important;
        padding-left: .1rem;

        // position: absolute;
        // right: 0;
        // padding-left: 5px;
    }

    // Widget control
    &-control {
        // border: 5px solid green;

        flex-grow: 1;

        color: var(--#{$prefix}form-widget-control--color);
        background-color: var(--#{$prefix}form-widget-control--bg-color);

        @if store.$control--padding-x == store.$control--padding-y {
            @if store.$control--padding-x > 0 {
                @include spacing.inner(store.$control--padding-x);
            }
        } @else {
            @include spacing.inner-x(store.$control--padding-x);
            @include spacing.inner-y(store.$control--padding-y);
        }

        @if store.$control--border-width > 0 {
            border      : store.$control--border-width solid var(--#{$prefix}form-widget-control--border-color);
        }
        border-radius   : store.$control--border-radius;


        @if store.$transition {
            @include transition.set(
                (color, background-color, border-color),
                store.$transition-delay,
                store.$transition-type,
            );
        }


        &:hover {
            color: var(--#{$prefix}form-widget-control--color--hover);
            background-color: var(--#{$prefix}form-widget-control--bg-color--hover);
            border-color: var(--#{$prefix}form-widget-control--border-color--hover);
        }

        &:focus {
            color: var(--#{$prefix}form-widget-control--color--active);
            background-color: var(--#{$prefix}form-widget-control--bg-color--active);
            border-color: var(--#{$prefix}form-widget-control--border-color--active);
            // outline: 20px solid #fc00eb;
            // outline-offset: 20px;
        }
    }

    // Widget group
    &-group {
        border: 5px solid greenyellow;

        @include flex.display;
        flex-direction: row;
        flex-wrap: wrap;
        align-items: stretch;
        flex-grow: 1;

        &-text {
            border: 3px solid red;
        }
    }

    // Widget description
    &-description {
        // border: 5px solid orange;

        // TODO: adapter la marge selon la variable sizing
        // TODO: utiliser la mixin pour les marges
        margin: .25rem 0 0 0;

        // TODO: adapter la fontsize selon la variable sizing
        font-size: .875em;

        color: var(--#{$prefix}form-widget-description--color);
        background-color: var(--#{$prefix}form-widget-description--bg-color);

        flex-basis: 100%;
        width: 100%;

        @if store.$description--padding-x == store.$description--padding-y {
            @if store.$description--padding-x > 0 {
                @include spacing.inner(store.$description--padding-x);
            }
        } @else {
            @include spacing.inner-x(store.$description--padding-x);
            @include spacing.inner-y(store.$description--padding-y);
        }
        border-radius   : store.$description--border-radius;
    }

    

    // Widget Hover
    // --

    &:hover {
        color: var(--#{$prefix}form-widget--color--hover);
        background-color: var(--#{$prefix}form-widget--bg-color--hover);
        border-color: var(--#{$prefix}form-widget--border-color--hover);
    }

    

    // Widget Focus
    // --

    &:has(&-control:focus) {
        color: var(--#{$prefix}form-widget--color--active);
        background-color: var(--#{$prefix}form-widget--bg-color--active);
        border-color: var(--#{$prefix}form-widget--border-color--active);
    }

    

    // Widget Inline
    // --

    $label-margin-right: .5rem;
    &-inline {
        flex-direction: row;
        align-items: center;
    }
    &-inline &-label {
        margin-bottom: 0;
        margin-right: $label-margin-right;

        @if store.$label--inline-width != auto {
            width: store.$label--inline-width;
        }
    }
    &-inline &-control {
        // // flex-grow: 1;
    }
    &-inline &-description {
        @if store.$label--inline-width != auto {
            margin-left: utils.px-to-rem(store.$label--inline-width) + $label-margin-right;
        }
    }
    &-inline &-group {
        // // flex-direction: row;
        // // align-items: center;
        // // flex-grow: 1;
    }

    

    // Icons
    // --

    &-label > .#{$prefix}icon,
    &-description > .#{$prefix}icon {
        @include iconMixin.toFontSize;
        @include transition.set(
            (fill, stroke),
            store.$transition-delay,
            store.$transition-type,
        );
    }
}

.#{$prefix}form-widget {


    // // Widget state

    // &:hover {
    //     // background-color: var(--#{$prefix}form-widget-control--bg-color--hover);
    //     // border-color: var(--#{$prefix}form-widget-control--border-color--hover);

    //     color: var(--#{$prefix}form-widget--color--hover);
    // }

    // &:has(:focus) {
    //     color: var(--#{$prefix}form-widget--color--active);
    // }
    





    // Widget Control
    // --

    // &-control {
    //     // border: 3px solid yellow;

    //     display: block;
    //     width: 100%;

    //     padding: store.$control--padding-y store.$control--padding-x;
    //     margin: 0;
    //     background-color: var(--#{$prefix}form-widget-control--bg-color);
    //     border: store.$control--border-width solid var(--#{$prefix}form-widget-control--border-color);
    //     border-radius: store.$control--border-radius;

    //     @if store.$transition {
    //         @include transition.set(
    //             (color, background-color, border-color),
    //             store.$transition-delay,
    //             store.$transition-type,
    //         );
    //     }

    //     // Control states

    //     &:hover {
    //         background-color: var(--#{$prefix}form-widget-control--bg-color--hover);
    //         border-color: var(--#{$prefix}form-widget-control--border-color--hover);
    //     }

    //     &:focus {
    //         background-color: var(--#{$prefix}form-widget-control--bg-color--active);
    //         border-color: var(--#{$prefix}form-widget-control--border-color--active);
    //     }

    //     &:disabled {
    //         background-color: var(--#{$prefix}form-widget-control--bg-color--readonly);
    //     //     border-color: $form-widget--control---border-color--disabled;
    //         &:not([readonly]) {
    //             background-color: var(--#{$prefix}form-widget-control--bg-color--disabled);
    //     //         color: $form-widget--control--text-color--disabled;
    //         }
    //     }


    //     // Input Color

    //     &[type=color] {
    //         width: 3rem;
    //         height: 2.5rem;
    //         padding: .375rem;
    //     }


    //     // Input Radio / Checkbox

    //     &[type=checkbox],
    //     &[type=radio] {
    //         display: inline-block;
    //         width: auto;
    //     }
    // }


    // Widget Group
    // --

    // &-group {
    //     position: relative;
    //     display: flex;
    //     flex-direction: row;
    //     flex-wrap: wrap;
    //     align-items: stretch;
    //     width: 100%;
    // }



}