// * ------------- @osw3/symfony-ux/assets/sass/builder/header.scss ------------
// *
// *    Builder for Header component
// *
// * ---------------------------------------------------------------------------

@use 'sass:map';
@use './brand';
@use './../mixins/flex';
@use './../storages/header' as store;
@use './../builders/banner';
@use './../storages/prefix';
@use './../mixins/position';
@use './../components/header';
@use './../mixins/transition';
@use './../storages/breakpoints';

@include banner.header('Component Header');
$prefix: prefix.$prefix;
$breakpoints: breakpoints.$breakpoints;


// * Component Structure
// * ---------------------------------------------

.#{$prefix}header {

    // Header container
    // -- 

    position: relative;
    padding: 0;
    margin: 0;
    z-index: 1000;

    background-color: var(--#{$prefix}header--bg-color);


    // Is Header Sticky ?
    // -- 

    &-sticky {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
    }

    & [class^=#{$prefix}container] {
        @include flex.display;
        @include flex.direction(row);
        @include flex.align-items(center);
        @include flex.justify-content(space-between);
        // z-index: 2
    }

    & .#{$prefix}brand {
        z-index: -2
    }


    &-content {
        background-color: rgb(2, 208, 95);
        @include flex.display;
        @include flex.direction(column);
        @include transition.set(
            (opacity, left, right, box-shadow), 
            store.$transition-delay, 
            store.$transition-type
        );

        box-shadow: none;
        

        // & .#{$prefix}menu {
        //     flex-grow: 1;
        //     justify-content: start !important;
        // }
    }


    // Backdrop
    &.open &-content::after {
        content: "";
        @include position.fixed(0,0,0,0);
        background-color: var(--#{$prefix}header--backdrop--bg-color);
        opacity: store.$backdrop--opacity;
        z-index: -1;
    }


    // Header mobile placement
    // -- 

    &-left &-content,
    &-right &-content {
        @include position.fixed(0, null, 0, null);
        width: store.$offcanvas-width;
        box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;
    }

    &-left &-content {
        @include position.left(store.$offcanvas-width * -1);
    }
    &-right &-content {
        @include position.right(store.$offcanvas-width * -1);
    }


    // &.open &-content::before {
    //     content: "";
    //     @include position.fixed(0,0,0,0);
    //     z-index: -1;
    //     backdrop-filter: blur(store.$backdrop--blur);
    // }
    // &.open &-content::after {
    //     content: "";
    //     @include position.fixed(0,0,0,0);
    //     background-color: var(--#{$prefix}header--backdrop--bg-color);
    //     opacity: store.$backdrop--opacity;
    //     z-index: -1;
    // }
    &-left.open &-content {
        @include position.left(0);
    }
    &-right.open &-content {
        @include position.right(0);
    }




    // &-top {
        
    // }



    // Header expand at $breakpoint
    // --

    @if map.has-key($breakpoints, store.$expand-at) {
        @media (min-width: map.get($breakpoints, store.$expand-at)) {
            & {
                background-color: var(--#{$prefix}header--expanded--bg-color);

                & .#{$prefix}brand {
                    @if store.$brand-margin-left > 0 {
                        margin-left: store.$brand-margin-left;
                    }
                    @if store.$brand-margin-right > 0 {
                        margin-right: store.$brand-margin-right;
                    }
                }
                & .#{$prefix}menu {
                    flex-grow: 1;
                    // justify-content: inherit !important;
                    & .#{$prefix}has-subnav > .#{$prefix}nav-items {
                        max-height: 80vh;
                        overflow-y: scroll;
                    }
                }

                &-toggler, &-close {
                    display: none;
                }

                &-content::after {
                    display: none;
                    height: 0;
                    width: 0;
                }

                &-left &-content,
                &-right &-content  {
                    background-color: rgb(135, 222, 196);

                    position: relative;
                    @include flex.display(true);
                    @include flex.direction(row);

                    @include position.left(auto);
                    @include position.right(auto);
                    // width: auto;

                    flex-grow: 1;
                    box-shadow: none;
                }
            }
        }
    }
}