// * ------------- @osw3/symfony-ux/assets/sass/builder/brand.scss -------------
// *
// *    Builder for Brand component
// *
// * ---------------------------------------------------------------------------

@use 'sass:map';
@use 'sass:list';
@use './../mixins/spacing';
@use './../builders/banner';
@use './../storages/prefix';
@use './../mixins/transition';
@use './../storages/breakpoints';

@use './../storages/brand' as store;
@use './../components/brand';
@include banner.header('Component Brand');


// * Component Structure
// * ---------------------------------------------

.#{prefix.$prefix}brand {

    // Set layout css variables
    // --

    // @each $name, $value in brand.$layout-properties {
    //     --#{prefix.$prefix}#{$name}: #{$value};
    // }


    // Brand container
    // --

    display        : inline-block;
    text-decoration: none;
    white-space    : nowrap;
    height         : fit-content;

    color          : var(--#{prefix.$prefix}brand-color);

    @if store.$primary-font-family {
        font-family: store.$primary-font-family;
    }
    font-size      : store.$primary-font-size;
    font-weight    : store.$primary-font-weight;


    // Brand Link
    // --

    &-link {
        color          : var(--#{prefix.$prefix}brand-color);
        display        : table;
        text-decoration: none;

        // border: 10px solid green;
        // padding: 15px;

        @include transition.set(
            (color),
            store.$transition-delay,
            store.$transition-type,
        );

        &:hover {
            color: var(--#{prefix.$prefix}brand-hover-color);
        }
    }


    // Brand Inner
    // --

    &-inner {
        // border: 10px solid orange;

        @include spacing.inner( 
            store.$padding-x,
            store.$padding-y,
            store.$padding-x,
            store.$padding-y,
        );
    }
    

    /// Brand Text
    /// --

    &-name {
        // border: 10px solid green;
        display: block;
        font-size: inherit;
        font-weight: inherit;
    }

    &-tagline {
        @include spacing.outer( 0,0,0,0 );
        display    : block;
        
        @if store.$secondary-font-family {
            font-family: store.$secondary-font-family;
        }
        font-size  : store.$secondary-font-size;
        font-weight: store.$secondary-font-weight;
    }
    &-name + &-tagline {
        @include spacing.outer( store.$tagline-offset ,0,0,0 );
    }
    


    /// Brand Sizes
    /// --

    // @each $size, $properties in $sizes {
    //     &-#{$size} {
    //         font-size: map.get($properties, 'font-size');
    //         font-weight: map.get($properties, 'font-weight');
            
    //         .#{$_CLASSNAME}-tagline {
    //             font-size: map.get($properties, 'tagline-size');
    //             font-weight: map.get($properties, 'font-weight');
    //             margin-top: map.get($properties, 'tagline-offset');
    //         }
    //         .#{$_CLASSNAME}-logo {
    //             max-height: map.get($properties, 'img-height');
    //         }
    //     }
    // }


    /// Brand images (logo & icon)
    /// --
    
    &-logo {
        display: none;
        width: auto;
        height: auto;
    }
    &-logo-main {
        display: block !important;
    }


    /// Responsive Brand & main logo
    /// --
    
    $default-breakpoint: '';

    @each $name in brand.$breakpoints {
        @if map.has-key(breakpoints.$breakpoints, $name) {
            // Default brand breakpoint. Displayed when all media queries ar hidden
            @if $default-breakpoint == '' {
                $default-breakpoint: $name;
                &-logo-#{$name} {
                    display: block;
                }
            }

            // Media query fot Available breakpoints
            @media (min-width: map.get(breakpoints.$breakpoints, $name)) {
                &-logo {
                    display: none;
                }
                &-logo-#{$name} {
                    display: block;
                }
            }
        }
    }
}
