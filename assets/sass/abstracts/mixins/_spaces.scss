// ************************************************************************** //
// *                                                                        * //
// * Theses mixins of spaces properties.                                    * //
// *                                                                        * //
// * How to import                                                          * //
// *  @use 'abstracts/mixins/spaces' as spaces;                             * //
// *                                                                        * //
// ************************************************************************** //

@mixin margin($top: null, $right: null, $bottom: null, $left: null) 
{
  @include _coords('margin', $top, $right, $bottom, $left);
}
@mixin margin-x($value: null) 
{
  @include _coords-x('margin', $value);
}
@mixin margin-y($value: null) 
{
  @include _coords-y('margin', $value);
}

@mixin padding($top: null, $right: null, $bottom: null, $left: null) 
{
  @include _coords('padding', $top, $right, $bottom, $left);
}
@mixin padding-x($value: null) 
{
  @include _coords-x('padding', $value);
}
@mixin padding-y($value: null) 
{
  @include _coords-y('padding', $value);
}

/// Position mixin's utilities
/// =============================================
/// 
@mixin _coords($type, $top: null, $right: null, $bottom: null, $left: null) 
{
  @if $right == $top and $bottom == $right and $left == $bottom and $top == $left {
    #{$type}: $top;
  }
  @else if $top == $bottom and $left == $right {
    #{$type}: $top $left;
  }
  @else {
    @if ($top not null) {#{$type}-top : $top;}
    @if ($right not null) {#{$type}-right : $right;}
    @if ($bottom not null) {#{$type}-bottom : $bottom;}
    @if ($left not null) {#{$type}-left : $left;}
  }
}
@mixin _coords-x($type, $value: null) 
{
  #{$type}-right : $value;
  #{$type}-left : $value;
}
@mixin _coords-y($type, $value: null) 
{
  #{$type}-top : $value;
  #{$type}-bottom : $value;
}