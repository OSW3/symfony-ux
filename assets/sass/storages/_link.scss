// * ------------- @osw3/symfony-ux/assets/sass/storages/link.scss -------------
// *
// *    Link Storage
// *
// * ---------------------------------------------------------------------------

@use './../storages/prefix';
// @use './../storages/fonts';
// @use './../storages/spaces';


// * Define storage data
// * ---------------------------------------------

$cursor: pointer;
$text-decoration: underline;
$text-decoration-hover: underline;
$text-decoration-active: underline;

$transition: true;
$transition-delay: var(--#{prefix.$prefix}transition-normal);
$transition-type: ease-in-out;


 
// * Storage Mixins definition
// * ---------------------------------------------

@mixin setCursor($cursor) {
    $cursor: $cursor !global;
}

@mixin setTextDecoration($normal, $hover: none, $active: none) {
    $text-decoration: $normal !global;
    $text-decoration-hover: $hover !global;
    $text-decoration-active: $active !global;
}
@mixin setTextDecorationColor($normal, $hover: none, $active: none) {
    $text-decoration-color: $normal !global;
    $text-decoration-hover-color: $hover !global;
    $text-decoration-active-color: $active !global;
}

// Enables or disables transitions for the brand's elements.
// @param {Boolean} $enabled - Whether to enable (`true`) or disable (`false`) transitions.
@mixin setTransition($enabled) {
    $transition: $enabled !global;

    // @if $transition and $transition-delay == null {
    //     $transition-delay : var(--#{prefix.$prefix}transition-normal) !global;
    // }
    // @if $transition and $transition-type == null {
    //     $transition-type  : ease-in-out !global;
    // }
}

// Sets the transition delay for the brand's elements.
// @param {Length} $delay - The duration of the transition delay, typically a CSS variable.
@mixin setTransitionDelay($delay) {
    $transition-delay: $delay !global;
}

// Sets the transition type (easing function) for the brand's elements.
// @param {String} $type - The type of easing, e.g., `ease-in-out`.
@mixin setTransitionType($type) {
    $transition-type: $type !global;
}