// * ------------- @osw3/symfony-ux/assets/sass/storages/alert.scss ------------
// *
// *    Alert Storage
// *
// * ---------------------------------------------------------------------------

@use './../storages/fonts';
@use './../storages/spaces';
@use './../storages/prefix';
$prefix: prefix.$prefix;


// * Define storage data
// * ---------------------------------------------

$border-width    : 1px;
$border-style    : solid;
$border-radius   : var(--#{$prefix}border-radius-normal);

$padding-x        : spaces.$base * .94;
$padding-y        : spaces.$base * 1.25;
$padding-x-small  : spaces.$base * .6;
$padding-y-small  : spaces.$base * 1;
$padding-x-large  : spaces.$base * 1;
$padding-y-large  : spaces.$base * 1.6;

$font-family      : inherit;
$font-size        : fonts.$scale-base * 1;
$font-size-small  : fonts.$scale-base * .95;
$font-size-large  : fonts.$scale-base * 1.2;
$font-weight      : 400;
$font-weight-small: 400;
$font-weight-large: 400;
$line-height      : 1.5;
$line-height-small: 1;
$line-height-large: 1.6;

$enable-palette: true;

$box-shadow       : inset 0 1px 0 rgba(255, 255, 255, 0.15), 0 1px 1px rgba(0, 0, 0, 0.075);

$transition-delay : var(--#{$prefix}transition-normal);
$transition-type  : ease-in-out;

// * Storage Mixins definition
// * ---------------------------------------------

// Sets the transition delay for the brand's elements.
// @param {Length} $delay - The duration of the transition delay, typically a CSS variable.
@mixin setTransitionDelay($delay) {
    $transition-delay: $delay !global;
}

// Sets the transition type (easing function) for the brand's elements.
// @param {String} $type - The type of easing, e.g., `ease-in-out`.
@mixin setTransitionType($type) {
    $transition-type: $type !global;
}