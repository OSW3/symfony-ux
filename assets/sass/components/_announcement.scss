// ************************************************************************** //
// *
// *    Components: Announcement
// *
// ************************************************************************** //
@use "sass:map";

@use './../variables/colors';
@use './../variables/prefix';
@use './../variables/transitions';
@use './../abstracts/mixins/var';
@use './../abstracts/mixins/flex';
@use './../abstracts/mixins/sizes';
@use './../abstracts/mixins/banner';
@use './../abstracts/mixins/transition';



// * ======================================================================== //
// * Component constants
// * ======================================================================== //

$_COMPONENT: 'announcement';
$_CLASSNAME: '#{prefix.$prefix}#{$_COMPONENT}';

@include banner.header('Component #{$_COMPONENT}');



// * ======================================================================== //
// * Component variables
// * ======================================================================== //

// * Layout variables
// * ------------------------------------------------------------------------ //

$announcement--height                           : 40px !default;
$announcement--transition                       : 'normal' !default;


// * Theme variables
// * ------------------------------------------------------------------------ //

$announcement--color                            : colors.$white !default;
$announcement--color--hover                     : colors.$white !default;
$announcement--bg-color                         : colors.$gray-600 !default;
$announcement--bg-color--hover                  : colors.$gray-600 !default;



// * ======================================================================== //
// * Component definition
// * ======================================================================== //

// * Palette
// * ------------------------------------------------------------------------ //

.#{$_CLASSNAME} {
    @include var.define( $_COMPONENT, prefix.$TEXT_COLOR,               $announcement--color);
    @include var.define( $_COMPONENT, prefix.$TEXT_COLOR_HOVER,         $announcement--color--hover);
    @include var.define( $_COMPONENT, prefix.$BACKGROUND_COLOR,         $announcement--bg-color);
    @include var.define( $_COMPONENT, prefix.$BACKGROUND_COLOR_HOVER,   $announcement--bg-color--hover);
}

// .#{$_CLASSNAME} {

//     @each $key, $value in $ui-colors {
//         &-#{$key} {
//             --#{$_CLASSNAME}--color           : var(--#{$key});
//             --#{$_CLASSNAME}--background-color: var(--#{$key}--tint-70);
//             --#{$_CLASSNAME}--border-color    : var(--#{$key});
//         }
//     }
// }


// * Structure
// * ------------------------------------------------------------------------ //

.#{$_CLASSNAME} {

    /// CSS variables
    /// --
    

    /// Announcement container
    /// --

    color: var(--#{prefix.$prefix}#{$_COMPONENT}--#{prefix.$TEXT_COLOR});
    background-color: var(--#{prefix.$prefix}#{$_COMPONENT}--#{prefix.$BACKGROUND_COLOR});

    @include flex.centered;
    @include sizes.set(null, $announcement--height);
    @include transition.set((color, background-color), map.get(transitions.$delays, $announcement--transition));

    & a {
        color: var(--#{prefix.$prefix}#{$_COMPONENT}--#{prefix.$TEXT_COLOR});
    }

    &:hover {
        @include var.set('color', '#{$_COMPONENT}--#{prefix.$TEXT_COLOR_HOVER}');

        color: var(--#{prefix.$prefix}#{$_COMPONENT}--#{prefix.$TEXT_COLOR_HOVER});
        background-color: var(--#{prefix.$prefix}#{$_COMPONENT}--#{prefix.$BACKGROUND_COLOR_HOVER});
    }
}


// * Responsive
// * ------------------------------------------------------------------------ //

// No responsive definition
