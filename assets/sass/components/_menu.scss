// ************************************************************************** //
// *
// *    Menu components.
// *
// ************************************************************************** //

@use './../variables/colors';
@use './../variables/prefix';
@use './../variables/transitions';
@use './../abstracts/mixins/var';
@use './../abstracts/mixins/flex';
@use './../abstracts/mixins/sizes';
@use './../abstracts/mixins/banner';
@use './../abstracts/mixins/corner';
@use './../abstracts/mixins/spaces';
@use './../abstracts/mixins/position';
@use './../abstracts/mixins/transition';



// * ======================================================================== //
// * Component constants
// * ======================================================================== //

$_COMPONENT: 'menu';
$_CLASSNAME: '#{prefix.$prefix}#{$_COMPONENT}';

@include banner.header('Component #{$_COMPONENT}');



// * ======================================================================== //
// * Component functions & mixins
// * ======================================================================== //

// No function or mixins definition



// * ======================================================================== //
// * Component variables
// * ======================================================================== //

// * Layout variables
// * ------------------------------------------------------------------------ //

$menu--border-radius                    : 'small' !default;
$menu--border-width                     : 1px !default;
$menu--link--text-decoration            : none !default;


// * Theme variables
// * ------------------------------------------------------------------------ //

$menu--background-color                 : colors.$white !default;
$menu--border-color                     : colors.$gray-500 !default;

$submenu--background-color              : colors.$white !default;

$menu-link--text-color                  : colors.$blue !default;
$menu-link--text-color--hover           : colors.$blue !default;
$menu-link--text-color--active          : colors.$blue !default;
$menu-link--text-color--disabled        : colors.$gray-600 !default;
$menu-link--background-color            : transparent !default;
$menu-link--background-color--hover     : colors.$gray-200 !default;
$menu-link--background-color--active    : colors.$gray-300 !default;
$menu-link--background-color--disabled  : transparent !default;



// * ======================================================================== //
// * Component definition
// * ======================================================================== //

// * Palette
// * ------------------------------------------------------------------------ //

// No palette definition


// * Structure
// * ------------------------------------------------------------------------ //

.#{$_CLASSNAME} {
    
    border-width: $menu--border-width;
    border-style: solid;
    @include corner.rounded(map-get($radius, $menu--border-radius));
    @include var.set('border-color', 'menu--border-color', $menu--border-color);
    @include var.set('background-color', 'menu--background-color', $menu--background-color);


    // Items
    // --

    &-items {
        @include flex.row;
        @include spaces.margin(0,0,0,0);
        flex-wrap: wrap;

    }

    &-vertical &-items {
        @include flex.column;
    }

    @each $pos in (center, start, end)
    {
        &-#{$pos} &-items {
            justify-content: #{$pos} !important;
        }
    }
    &-fill &-items {
        justify-content: space-around !important;
    }
    &-fill &-item {
        flex-grow: 1;
        // justify-self: center;
        text-align: center;
    }

    
    // Item
    // --

    &-item {
        @include position.relative;
    }

    
    // Link
    // --

    &-link {
        cursor: pointer;
        display: block;
        text-decoration: $menu--link--text-decoration;
        // @include corner.rounded(0);

        @include spaces.padding-y(map-get($_SPACERS, 2));
        @include spaces.padding-x(map-get($_SPACERS, 3));
        @include transition.set((color, background-color), map-get(transitions.$delays, normal));

        @include var.set('background-color', 'menu-link--background-color', $menu-link--background-color);
        @include var.set('color', 'menu-link--text-color', $menu-link--text-color);

        &:hover {
            @include var.set('background-color', 'menu-link--background-color--hover', $menu-link--background-color--hover);
            @include var.set('color', 'menu-link--text-color--hover', $menu-link--text-color--hover);
        }

        &.active,
        &:active,
        &.active:hover,
        &:active:hover {
            @include var.set('background-color', 'menu-link--background-color--active', $menu-link--background-color--active);
            @include var.set('color', 'menu-link--text-color--active', $menu-link--text-color--active);
        }

        &[disabled],
        &[disabled]:hover {
            @include var.set('background-color', 'menu-link--background-color--disabled', $menu-link--background-color--disabled);
            @include var.set('color', 'menu-link--text-color--disabled', $menu-link--text-color--disabled);
            cursor: default !important;
        }
    }

    &:not(&-vertical):not(&-center):not(&-end) &-item:first-child &-link {
        @include corner.start(map-get($radius, $menu--border-radius));
    }
    &-end:not(&-vertical) &-item:last-child &-link,
    &-fill:not(&-vertical) &-item:last-child &-link {
        @include corner.end(map-get($radius, $menu--border-radius));
    }
    &-vertical &-item:first-child &-link {
        @include corner.top(map-get($radius, $menu--border-radius));
    }
    &-vertical &-item:last-child &-link {
        @include corner.bottom(map-get($radius, $menu--border-radius));
    }

    
    // Sub Menu
    & .with-submenu {
    
        & > .#{prefix.$prefix}menu-link {
            display: flex;
            flex-direction: row;
            justify-content: space-between;
            align-items: center;
            &::after {
                content: "";
                width: 0;
                height: 0;
                border-left: 5px solid transparent;
                border-right: 5px solid transparent;
                border-top: 5px solid #2f2f2f;
                font-size: 0;
                line-height: 0;
                margin-left: map-get($_SPACERS, 2);
            }
        }
    
        // & > ul {
        & > .#{prefix.$prefix}menu-items {
            @include position.absolute(100%, 0, 0, 0);
            display: none;
            height: fit-content;
    
            box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;
            @include var.set('background-color', 'submenu--background-color', $submenu--background-color);
            z-index: 1000;
        }
        // & > ul & > ul {
        & > .#{prefix.$prefix}menu-items & > .#{prefix.$prefix}menu-items {
            @include position.left(100%);
            @include position.top(0);
            @include sizes.width(100%);
        }
    
        &:hover > ul {
            display: inline;
        }
    }
}


// * Responsive
// * ------------------------------------------------------------------------ //

// No responsive definition
