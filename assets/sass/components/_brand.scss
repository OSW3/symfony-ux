// ************************************************************************** //
// *
// *    Components: Brand
// *
// ************************************************************************** //

@use 'sass:meta';
@use './../generated';
@use './../abstracts/mixins/var';
@use './../abstracts/mixins/flex';
@use './../abstracts/mixins/banner';
@use './../abstracts/mixins/spaces';

$_component: 'brand';
$_classname: '#{$prefix}#{$_component}';

@include banner.header('Component #{$_component}');



// * =============================================
// *
// *    Component Properties
// *
// * =============================================

// * Default layout variables
// * =========================

$brand--small--font-size     : 1.2rem !default;
$brand--small--tagline-size  : .8rem !default;
$brand--small--tagline-offset: 0px !default;
$brand--small--font-weight   : 600 !default;
$brand--small--img-height    : 32px !default;

$brand--medium--font-size     : 1.5rem !default;
$brand--medium--tagline-size  : 1rem !default;
$brand--medium--tagline-offset: 0px !default;
$brand--medium--font-weight   : 700 !default;
$brand--medium--img-height    : 42px !default;

$brand--large--font-size     : 2rem !default;
$brand--large--tagline-size  : 1.2rem !default;
$brand--large--tagline-offset: 0px !default;
$brand--large--font-weight   : 900 !default;
$brand--large--img-height    : 56px !default;

$sizes: (
    small: (
        font-size     : $brand--small--font-size,
        tagline-size  : $brand--small--tagline-size,
        tagline-offset: $brand--small--tagline-offset,
        font-weight   : $brand--small--font-weight,
        img-height    : $brand--small--img-height,
    ), 
    medium: (
        font-size     : $brand--medium--font-size,
        tagline-size  : $brand--medium--tagline-size,
        tagline-offset: $brand--medium--tagline-offset,
        font-weight   : $brand--medium--font-weight,
        img-height    : $brand--medium--img-height,
    ), 
    large: (
        font-size     : $brand--large--font-size,
        tagline-size  : $brand--large--tagline-size,
        tagline-offset: $brand--large--tagline-offset,
        font-weight   : $brand--large--font-weight,
        img-height    : $brand--large--img-height,
    )
);

// * Available responsive logo + Default logo
// * =========================

$brand-breakpoints: if(meta.global-variable-exists('brand-breakpoints', $module: generated), generated.$brand-breakpoints, ()) !default;


// * Default theme variables
// * =========================

$brand--text-color      : $gray-600;
$brand--text-color--hover: $black;


// * =============================================
// *
// *    Component Definition
// *
// * =============================================

.#{$_classname} {

    /// Brand container
    /// --
    
    display: inline-block;
    text-decoration: none;
    white-space: nowrap;
    height: fit-content;
    @include var.set('color', 'brand--text-color', $brand--text-color);
    

    
    /// Brand Link
    /// --
    
    &-link {
        color: inherit;
        display: table;
        text-decoration: none;
        transition: color map-get($delays, normal);

        &:hover {
            @include var.set('color', 'brand--text-color--hover', $brand--text-color--hover);
        }
    }
    

    /// Brand Text
    /// --

    &-text {
        display: block;
        font-size: inherit;
        font-weight: inherit;
    }

    &-tagline {
        @include spaces.margin(0, 0, 0, 0);
        display: block;
    }
    

    /// Brand images (logo & icon)
    /// --
    
    &-logo {
    // & img {
        display: none;
        // display: block;
        width: auto;
        height: auto;
    }


    /// Brand Sizes
    /// --

    @each $size, $properties in $sizes {
        &-#{$size} {
            font-size: map-get($properties, 'font-size');
            font-weight: map-get($properties, 'font-weight');
            
            .#{$_classname}-tagline {
                font-size: map-get($properties, 'tagline-size');
                font-weight: map-get($properties, 'font-weight');
                margin-top: map-get($properties, 'tagline-offset');
            }
            .#{$_classname}-logo {
                max-height: map-get($properties, 'img-height');
            }
        }
    }


    /// Responsive Brand
    /// --
    
    @if length($brand-breakpoints) > 0 {
        $brand-default: nth($brand-breakpoints, 1);
        &-logo-#{$brand-default} {
            display: block;
        }
    }
    
    @each $breakpoint-name, $breakpoint-value in $breakpoints {
        @if index($brand-breakpoints, $breakpoint-name) {
            @media (min-width: $breakpoint-value) {
                .#{$_classname}-logo {
                    display: none;
                }
                .#{$_classname}-logo-#{$breakpoint-name} {
                    display: block;
                }
            }
        }
    }
}